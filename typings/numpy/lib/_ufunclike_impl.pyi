"""
This type stub file was generated by pyright.
"""

import numpy as np
from typing import Any, TypeVar, overload
from numpy import floating, object_
from numpy._typing import NDArray, _ArrayLikeFloat_co, _ArrayLikeObject_co, _FloatLike_co

_ArrayType = TypeVar("_ArrayType", bound=NDArray[Any])
__all__: list[str]
@overload
def fix(x: _FloatLike_co, out: None = ...) -> floating[Any]:
    ...

@overload
def fix(x: _ArrayLikeFloat_co, out: None = ...) -> NDArray[floating[Any]]:
    ...

@overload
def fix(x: _ArrayLikeObject_co, out: None = ...) -> NDArray[object_]:
    ...

@overload
def fix(x: _ArrayLikeFloat_co | _ArrayLikeObject_co, out: _ArrayType) -> _ArrayType:
    ...

@overload
def isposinf(x: _FloatLike_co, out: None = ...) -> np.bool:
    ...

@overload
def isposinf(x: _ArrayLikeFloat_co, out: None = ...) -> NDArray[np.bool]:
    ...

@overload
def isposinf(x: _ArrayLikeFloat_co, out: _ArrayType) -> _ArrayType:
    ...

@overload
def isneginf(x: _FloatLike_co, out: None = ...) -> np.bool:
    ...

@overload
def isneginf(x: _ArrayLikeFloat_co, out: None = ...) -> NDArray[np.bool]:
    ...

@overload
def isneginf(x: _ArrayLikeFloat_co, out: _ArrayType) -> _ArrayType:
    ...

